local M = {}

-- Color Palette
local colors = {
	bg = "#1D2126",
	fg = "#E3E1E1",
	bg_highlight = "#2B2E31",
	bg_selection = "#3D4043",
	line_numbers = "#46494D",
	comment = "#7F8286",
	cursor_line = "#2B2E31",
	border = "#3D4043",
	red = "#f06292",
	green = "#66dfc4",
	yellow = "#f7bc62",
	blue = "#64b5f6",
	cyan = "#4fc3f7",
	magenta = "#d88ee4",
	orange = "#f4a343",
	red_dim = "#bb1b3f",
	green_dim = "#176e61",
	blue_dim = "#05699f",
	orange_dim = "#bc5412",
	error = "#f06292",
	warning = "#f4a343",
	info = "#64b5f6",
	hint = "#66dfc4",
	none = "NONE",
}

local function setup_highlights()
	local highlights = {
		Normal = { fg = colors.fg, bg = colors.bg },
		NormalFloat = { fg = colors.fg, bg = colors.bg_highlight },
		NormalNC = { fg = colors.fg, bg = colors.bg },
		Cursor = { fg = colors.bg, bg = colors.fg },
		CursorLine = { bg = colors.cursor_line },
		CursorLineNr = { fg = colors.fg, bold = true },
		LineNr = { fg = colors.line_numbers },
		SignColumn = { bg = colors.bg },
		ColorColumn = { bg = colors.bg_highlight },
		Conceal = { fg = colors.comment },
		CursorColumn = { bg = colors.cursor_line },
		IncSearch = { fg = colors.bg, bg = colors.yellow },
		Search = { fg = colors.bg, bg = colors.yellow },
		VertSplit = { fg = colors.border },
		FloatBorder = { fg = colors.border, bg = colors.bg_highlight },
		TabLine = { fg = colors.comment, bg = colors.bg_highlight },
		TabLineFill = { bg = colors.bg },
		TabLineSel = { fg = colors.fg, bg = colors.bg },
		Title = { fg = colors.cyan, bold = true },
		StatusLine = { fg = colors.fg, bg = colors.bg },
		StatusLineNC = { fg = colors.comment, bg = colors.bg_highlight },
		Folded = { fg = colors.comment, bg = colors.bg_highlight },
		FoldColumn = { fg = colors.comment },
		Pmenu = { fg = colors.fg, bg = colors.bg_highlight },
		PmenuSel = { fg = colors.fg, bg = colors.bg_selection },
		PmenuSbar = { bg = colors.bg_highlight },
		PmenuThumb = { bg = colors.border },
		WildMenu = { fg = colors.fg, bg = colors.bg_selection },
		Visual = { bg = colors.bg_selection },
		VisualNOS = { bg = colors.bg_selection },
		ErrorMsg = { fg = colors.error },
		WarningMsg = { fg = colors.warning },
		MoreMsg = { fg = colors.green },
		Question = { fg = colors.green },
		DiagnosticError = { fg = colors.error },
		DiagnosticWarn = { fg = colors.warning },
		DiagnosticInfo = { fg = colors.info },
		DiagnosticHint = { fg = colors.hint },
		DiagnosticUnderlineError = { sp = colors.error, undercurl = true },
		DiagnosticUnderlineWarn = { sp = colors.warning, undercurl = true },
		DiagnosticUnderlineInfo = { sp = colors.info, undercurl = true },
		DiagnosticUnderlineHint = { sp = colors.hint, undercurl = true },
		DiffAdd = { bg = colors.green_dim },
		DiffChange = { bg = colors.blue_dim },
		DiffDelete = { bg = colors.red_dim },
		DiffText = { bg = colors.blue },
		SpellBad = { sp = colors.error, undercurl = true },
		SpellCap = { sp = colors.warning, undercurl = true },
		SpellRare = { sp = colors.info, undercurl = true },
		SpellLocal = { sp = colors.info, undercurl = true },
		Comment = { fg = colors.comment, italic = true },
		Constant = { fg = colors.fg },
		String = { fg = colors.green },
		Character = { fg = colors.green },
		Number = { fg = colors.yellow },
		Boolean = { fg = colors.cyan },
		Float = { fg = colors.yellow },
		Identifier = { fg = colors.fg },
		Function = { fg = colors.cyan, bold = true },
		Statement = { fg = colors.red },
		Conditional = { fg = colors.red },
		Repeat = { fg = colors.red },
		Label = { fg = colors.cyan },
		Operator = { fg = colors.blue },
		Keyword = { fg = colors.red },
		Exception = { fg = colors.cyan },
		PreProc = { fg = colors.cyan },
		Include = { fg = colors.red },
		Define = { fg = colors.red },
		Macro = { fg = colors.blue },
		PreCondit = { fg = colors.cyan },
		Type = { fg = colors.blue },
		StorageClass = { fg = colors.red },
		Structure = { fg = colors.yellow },
		Typedef = { fg = colors.yellow },
		Special = { fg = colors.fg },
		SpecialChar = { fg = colors.fg },
		Tag = { fg = colors.red },
		Delimiter = { fg = colors.fg },
		SpecialComment = { fg = colors.comment, italic = true },
		Debug = { fg = colors.red },
		Underlined = { underline = true },
		Ignore = { fg = colors.comment },
		Error = { fg = colors.error },
		Todo = { fg = colors.yellow, bold = true },
		["@comment"] = { link = "Comment" },
		["@error"] = { link = "Error" },
		["@none"] = { bg = colors.none, fg = colors.none },
		["@preproc"] = { link = "PreProc" },
		["@define"] = { link = "Define" },
		["@operator"] = { link = "Operator" },
		["@punctuation.delimiter"] = { fg = colors.fg },
		["@punctuation.bracket"] = { fg = colors.fg },
		["@punctuation.special"] = { fg = colors.fg },
		["@string"] = { link = "String" },
		["@string.regex"] = { fg = colors.orange },
		["@string.escape"] = { fg = colors.fg },
		["@string.special"] = { fg = colors.fg },
		["@character"] = { link = "Character" },
		["@character.special"] = { fg = colors.fg },
		["@boolean"] = { link = "Boolean" },
		["@number"] = { link = "Number" },
		["@float"] = { link = "Float" },
		["@function"] = { link = "Function" },
		["@function.builtin"] = { fg = colors.cyan },
		["@function.call"] = { fg = colors.cyan },
		["@function.macro"] = { fg = colors.blue },
		["@method"] = { fg = colors.cyan },
		["@method.call"] = { fg = colors.cyan },
		["@constructor"] = { fg = colors.yellow },
		["@parameter"] = { fg = colors.fg },
		["@keyword"] = { link = "Keyword" },
		["@keyword.function"] = { fg = colors.red },
		["@keyword.operator"] = { fg = colors.blue },
		["@keyword.return"] = { fg = colors.red },
		["@conditional"] = { link = "Conditional" },
		["@repeat"] = { link = "Repeat" },
		["@label"] = { link = "Label" },
		["@include"] = { link = "Include" },
		["@exception"] = { link = "Exception" },
		["@type"] = { link = "Type" },
		["@type.builtin"] = { fg = colors.blue },
		["@type.definition"] = { fg = colors.blue },
		["@type.qualifier"] = { fg = colors.red },
		["@storageclass"] = { link = "StorageClass" },
		["@attribute"] = { fg = colors.yellow },
		["@field"] = { fg = colors.fg },
		["@property"] = { fg = colors.fg },
		["@variable"] = { fg = colors.fg },
		["@variable.builtin"] = { fg = colors.cyan },
		["@constant"] = { link = "Constant" },
		["@constant.builtin"] = { fg = colors.cyan },
		["@constant.macro"] = { fg = colors.blue },
		["@namespace"] = { fg = colors.yellow },
		["@symbol"] = { fg = colors.fg },
		["@text"] = { fg = colors.fg },
		["@text.title"] = { fg = colors.cyan, bold = true },
		["@text.literal"] = { fg = colors.green },
		["@text.uri"] = { fg = colors.blue, underline = true },
		["@text.todo"] = { fg = colors.yellow, bold = true },
		["@text.todo.checked"] = { fg = colors.green },
		["@text.todo.unchecked"] = { fg = colors.red },
		["@text.diff.add"] = { fg = colors.green },
		["@text.diff.remove"] = { fg = colors.red },
		["@text.comment"] = { link = "Comment" },
	}

	for group, style in pairs(highlights) do
		vim.api.nvim_set_hl(0, group, style)
	end
end

function M.setup()
	-- Activate termguicolors
	vim.o.termguicolors = true
	vim.g.background = "dark"

	-- Clear all default highlights
	vim.cmd("hi clear")

	-- Set highlights
	setup_highlights()
end

return M
